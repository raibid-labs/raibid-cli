[workspace]
resolver = "2"
members = [
    "crates/common",
    "crates/cli",
    "crates/tui",
    "crates/server",
    "crates/agent",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Raibid Labs"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/raibid-labs/raibid-ci"

[workspace.dependencies]
# CLI and parsing
clap = { version = "4", features = ["derive", "cargo"] }

# Error handling
anyhow = "1"
thiserror = "1"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9"
serde_path_to_error = "0.1"
serde_with = "3.4"
toml = "0.8"

# TUI
ratatui = "0.25"
crossterm = "0.27"

# Terminal utilities
colored = "2"
comfy-table = "7"
dialoguer = "0.11"

# Time and date
chrono = { version = "0.4", features = ["serde"] }
humantime = "2.1"

# Async runtime
tokio = { version = "1", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# HTTP server (Axum)
axum = { version = "0.8", features = ["macros"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["trace", "cors", "request-id"] }
hyper = { version = "1.5", features = ["full"] }

# Kubernetes
kube = { version = "0.87", features = ["runtime", "derive"] }
k8s-openapi = { version = "0.20", features = ["v1_28"], default-features = false }

# HTTP client
reqwest = { version = "0.11", features = ["blocking", "json"] }

# Utilities
regex = "1"
rand = "0.8"
shellexpand = "3.1"
dirs = "5.0"
sha256 = "1.5"
byte-unit = "5.1"
uuid = { version = "1.6", features = ["v4"] }

# Dev dependencies
assert_cmd = "2"
predicates = "3"
tempfile = "3"

# Workspace crates
raibid-common = { path = "crates/common" }
raibid-cli = { path = "crates/cli" }
raibid-tui = { path = "crates/tui" }
raibid-server = { path = "crates/server" }
raibid-agent = { path = "crates/agent" }

[profile.dev]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.test]
opt-level = 0
debug = true

[profile.bench]
opt-level = 3
debug = false
