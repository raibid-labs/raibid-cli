name: Orchestrator - Comment Events

on:
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  contents: read

jobs:
  check-for-answers:
    runs-on: ubuntu-latest
    # Only run for maintainer/owner comments or if comment has answer patterns
    if: |
      github.event.comment.author_association == 'OWNER' ||
      github.event.comment.author_association == 'MEMBER' ||
      contains(github.event.comment.body, 'A1:') ||
      contains(github.event.comment.body, 'Answer') ||
      contains(github.event.comment.body, '1.')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Draft Status
        id: draft_check
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./scripts/infra/check-draft-status.sh
          ./scripts/infra/check-draft-status.sh

      - name: Skip if Draft
        if: steps.draft_check.outputs.is_draft == 'true'
        run: |
          echo "‚è≠Ô∏è Skipping answer check - issue is in draft state"
          echo "Draft issues are handled by the enrichment workflow"
          exit 0

      - name: Check if Answers Provided
        if: steps.draft_check.outputs.is_draft == 'false'
        id: check_answers
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          # Check if comment contains answer patterns (A1:, Answer 1:, Decision:, or 1., 2., etc.)
          if echo "$COMMENT_BODY" | grep -qE '^([0-9]+\.|A[0-9]+:|Answer [0-9]+:|Decision:)'; then
            echo "has_answers=true" >> $GITHUB_OUTPUT
          else
            echo "has_answers=false" >> $GITHUB_OUTPUT
          fi

      - name: Re-check Issue Readiness
        if: steps.draft_check.outputs.is_draft == 'false' && steps.check_answers.outputs.has_answers == 'true'
        id: check
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./scripts/infra/check-issue-readiness.sh
          ./scripts/infra/check-issue-readiness.sh

      - name: Resume Paused Agent
        if: steps.draft_check.outputs.is_draft == 'false' && steps.check.outputs.ready == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.issue.number }} --body \
            "üöÄ **Questions Answered - Resuming Work**

            All clarifying questions have been answered. Spawning development agent.

            **Agent Type**: rust-pro
            **Workflow**: TDD (Test-Driven Development)
            **Status**: ‚è∏Ô∏è PAUSED ‚Üí ‚ñ∂Ô∏è IN PROGRESS

            **Next Steps:**
            1. Agent will check out implementation branch
            2. Write tests first (TDD approach)
            3. Implement features to pass tests
            4. Submit PR when complete

            ---
            *Orchestrator Event-Driven System v1.0*"

      - name: Update Labels
        if: steps.draft_check.outputs.is_draft == 'false' && steps.check.outputs.ready == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --add-label "ready:work" \
            --remove-label "waiting:answers" || true

      - name: Trigger Agent Spawn
        if: steps.draft_check.outputs.is_draft == 'false' && steps.check.outputs.ready == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          chmod +x ./scripts/infra/spawn-agent-comment.sh
          ./scripts/infra/spawn-agent-comment.sh
